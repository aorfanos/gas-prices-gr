name: Test

on:
  pull_request:
    types: [opened, synchronize, reopened, labeled]

jobs:
  unit-and-coverage:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up asdf
      uses: asdf-vm/actions/setup@v2

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: 3.11

    - name: Use cached environment
      id: cache-env
      uses: actions/cache@v2
      with:
        path: ${{ env.ASDF_DIR }}
        key: ${{ runner.os }}-asdf-gpgrapi-${{ hashFiles('**/.tool-versions') }}
        restore-keys: |
          ${{ runner.os }}-asdf-gpgrapi-

    - name: Set up environment
      if: steps.cache-env.outputs.cache-hit != 'true'
      uses: asdf-vm/actions/install@v2.2.0

    - name: Install dependencies
      working-directory: ${{ github.workspace }}
      run: |
        poetry config virtualenvs.create false
        poetry install --no-root --no-interaction --no-dev

    - name: Run unit tests
      working-directory: ${{ github.workspace }}
      run: |
        poetry run python -m pytest \
        --quiet \
        --md-report \
        --md-report-verbose=1 \
        --md-report-zeros empty \
        --md-report-color never \
        ./gas_prices_gr >> unit-tests.md

        echo "# Testing summary" >> $GITHUB_STEP_SUMMARY
        echo -en "## Unit tests\n\n" >> $GITHUB_STEP_SUMMARY
        echo "$(cat unit-tests.md)" >> $GITHUB_STEP_SUMMARY

    - name: Run code coverage
      working-directory: ${{ github.workspace }}
      run: |
        echo -en "\n\n## Code coverage\n\n" >> $GITHUB_STEP_SUMMARY
        poetry run coverage report --format=markdown \
        ./gas_prices_gr/scrape_gas_prices_vrisko.py \
        >> $GITHUB_STEP_SUMMARY

  docker-tests:

    runs-on: ubuntu-latest

    steps:

    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Docker build
      run: |
        docker build -t test-gas-prices-gr-api .

    - name: Test image efficiency with Dive
      env:
        CI: true
      run: |
        docker run --rm --env CI=true -v /var/run/docker.sock:/var/run/docker.sock wagoodman/dive test-gas-prices-gr-api

    - name: Test app is running in Docker
      run: |
        # run the container in detached mode
        docker run -d -p 5000:5000 --name test-gas-prices-gr-api test-gas-prices-gr-api:latest
        # wait for the container to start
        sleep 5

    - name: Test app endpoint is responding
      run: |
        curl -s http://localhost:5000/scrape/vrisko/athina | jq
